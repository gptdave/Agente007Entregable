import { Pinecone } from "@pinecone-database/pinecone";
import { NextResponse } from "next/server";
import { OpenAI } from "openai";

const openai = new OpenAI({
    baseURL: "https://openrouter.ai/api/v1",
    apiKey: process.env.OPENAI_API_KEY,
});

const MODEL_VERSION = "meta-llama/llama-3.1-70b-instruct";
const INDEX_NAME = "hackathon-centro2";
const pc = new Pinecone({ apiKey: process.env.PINECONE_API_KEY ?? "" });

// Funciones de utilidad
async function callAI(prompt: string) {
    const completion = await openai.chat.completions.create({
        model: MODEL_VERSION,
        messages: [{ role: "user", content: prompt }],
    });
    return completion.choices[0].message?.content ?? "";
}

async function queryIndex(indexName: string, query: Record<string, any>) {
    const index = pc.Index(indexName);
    const response = await index.query({
        vector: Object.values(query),
        topK: 10,
        includeMetadata: true,
    });
    return response.matches;
}

async function embedQuery(query: string) {
    const model = "multilingual-e5-large";
    const embedding = await pc.inference.embed(model, [query], {
        inputType: "query",
    });
    return embedding.data[0];
}

async function getRelevantContext(companyInfo: any) {
    const query = `${companyInfo.nombreEmpresa} ${companyInfo.industria} M√©xico emprendedores startups`;
    const embedding = await embedQuery(query);
    const matches = await queryIndex(INDEX_NAME, embedding);
    return matches.map((match: any) => match.metadata.text).join("\n\n");
}

// Funciones de an√°lisis espec√≠ficas
async function getBasicDefinitions(companyInfo: any, relevantContext: string) {
    const prompt = `
Proporciona definiciones detalladas y an√°lisis de los siguientes conceptos fundamentales:

1. DENUE del INEGI en M√©xico
- ¬øQu√© es exactamente?
- ¬øC√≥mo funciona?
- ¬øQu√© informaci√≥n proporciona?
- ¬øC√≥mo se utiliza para an√°lisis de mercado?

2. NSE de la AMAI
- Definici√≥n completa
- Metodolog√≠a actual
- Niveles socioecon√≥micos
- Aplicaci√≥n en an√°lisis de mercado

3. Clasificaci√≥n Generacional
- Detalle espec√≠fico de cada generaci√≥n y sus a√±os de nacimiento:
  * Baby Boomers
  * Generaci√≥n X
  * Millennials
  * Generaci√≥n Z
  * Generaci√≥n Alpha

4. Tipos de Segmentaci√≥n
- Segmentaci√≥n Geogr√°fica: definici√≥n y ejemplos
- Segmentaci√≥n Demogr√°fica: definici√≥n y ejemplos
- Segmentaci√≥n Psicogr√°fica: definici√≥n y ejemplos
- Segmentaci√≥n de Comportamiento: definici√≥n y ejemplos

Proporciona informaci√≥n precisa y actualizada para cada concepto.
Contextualiza la informaci√≥n para ${companyInfo.industria}.`;

    return await callAI(prompt);
}

async function getMarketStructure(companyInfo: any, relevantContext: string) {
    const prompt = `
Analiza detalladamente el tama√±o y estructura del mercado de emprendedores y startups en M√©xico, 
espec√≠ficamente relevante para ${companyInfo.industria}:

1. Seg√∫n DENUE:
- N√∫mero total de unidades econ√≥micas
- Distribuci√≥n por sector
- Tendencias de crecimiento

2. Seg√∫n Censos Econ√≥micos:
- Datos hist√≥ricos
- Comparativas temporales
- Indicadores clave

3. Seg√∫n Registros Administrativos:
- Estad√≠sticas oficiales
- Registros gubernamentales
- Datos de instituciones relevantes

4. Informaci√≥n espec√≠fica por industria:
- Sectores principales
- Concentraci√≥n de mercado
- Oportunidades identificadas

5. Estudios de mercado disponibles:
- Hallazgos clave
- Tendencias identificadas
- Proyecciones

Incluye n√∫meros espec√≠ficos y datos cuantitativos cuando est√©n disponibles.`;

    return await callAI(prompt);
}

async function getStartupCounts(companyInfo: any, relevantContext: string) {
    const prompt = `
Proporciona un an√°lisis detallado del n√∫mero de emprendedores y startups en M√©xico,
enfoc√°ndote en ${companyInfo.industria}, seg√∫n:

1. INEGI:
- N√∫mero total de emprendedores registrados
- Distribuci√≥n por sector
- Tendencias hist√≥ricas

2. CANACINTRA:
- Estad√≠sticas de afiliados
- Distribuci√≥n por industria
- Datos de crecimiento

3. AMEXCAP:
- N√∫mero de startups registradas
- Inversiones realizadas
- Sectores principales

Incluye una tabla de distribuci√≥n geogr√°fica considerando que:
- En M√©xico hay 1.3 millones de emprendedores
- En la Ciudad de M√©xico se encuentra el 23.1% (300,300)
- Calcula y distribuye el resto por estados principales

Proporciona todos los datos num√©ricos disponibles y fuentes.`;

    return await callAI(prompt);
}

async function getPopulationAnalysis(companyInfo: any, relevantContext: string) {
    const prompt = `
Realiza un an√°lisis poblacional detallado de M√©xico, considerando el impacto en ${companyInfo.industria}:

1. Poblaci√≥n por a√±o:
- 2018
- 2019
- 2020
- 2021
- 2022

2. C√°lculos espec√≠ficos:
- Tasa de crecimiento anual para cada a√±o
- Crecimiento promedio del periodo
- Proyecci√≥n para 2023 y 2024
- Identificaci√≥n de patrones y tendencias

3. An√°lisis de factores de crecimiento:
Identifica y analiza los 3 factores m√°s importantes que podr√≠an influir en el crecimiento de emprendedores y startups en:
- Ciudad de M√©xico
- Estado de M√©xico
- Jalisco
- Nuevo Le√≥n
- Guanajuato
- Quer√©taro
- Puebla

4. An√°lisis de factores culturales:
Para cada estado mencionado, identifica los 3 factores culturales m√°s importantes que influyen en el crecimiento de emprendedores y startups.

Incluye tablas comparativas y datos cuantitativos cuando sea posible.`;

    return await callAI(prompt);
}

async function getAreasCrecimiento(companyInfo: any, relevantContext: string) {
    const prompt = `
Basado en el siguiente contexto y datos relevantes:
${relevantContext}

Analiza y lista las √°reas con mayor potencial de crecimiento para emprendedores y startups en M√©xico,
espec√≠ficamente relevantes para ${companyInfo.industria}:

1. Identifica los sectores con mayor potencial
2. Analiza las tendencias de crecimiento por sector
3. Eval√∫a las oportunidades espec√≠ficas en cada √°rea
4. Considera factores como:
   - Tendencias del mercado
   - Necesidades no cubiertas
   - Innovaci√≥n tecnol√≥gica
   - Cambios demogr√°ficos`;

    return await callAI(prompt);
}

async function getInfraestructura(companyInfo: any, relevantContext: string) {
    const prompt = `
Basado en el siguiente contexto y datos relevantes:
${relevantContext}

Proporciona un an√°lisis detallado de la infraestructura necesaria para ${companyInfo.industria} 
por estado (CDMX, EdoMex, Jalisco, Nuevo Le√≥n, Guanajuato, Quer√©taro, Puebla), considerando:

Para cada estado, analiza:
1. Infraestructura financiera
   - Disponibilidad de fondos
   - Programas de financiamiento
   - Instituciones financieras

2. Infraestructura urbana
   - Calidad de vida
   - Conectividad
   - Servicios b√°sicos

3. Infraestructura tecnol√≥gica
   - Velocidad de internet
   - Servicios tecnol√≥gicos
   - Hubs de innovaci√≥n

4. Infraestructura educativa
   - Calidad educativa
   - Programas de capacitaci√≥n
   - Instituciones acad√©micas

Proporciona una evaluaci√≥n cualitativa (alta/media/baja) para cada aspecto y justifica.`;

    return await callAI(prompt);
}

async function getFactoresCulturales(companyInfo: any, relevantContext: string) {
    const prompt = `
Basado en el siguiente contexto y datos relevantes:
${relevantContext}

Analiza los factores culturales que afectan a ${companyInfo.industria} 
por estado (CDMX, EdoMex, Jalisco, Nuevo Le√≥n, Guanajuato, Quer√©taro, Puebla), incluyendo:

Para cada estado, eval√∫a:
1. Valoraci√≥n del riesgo y la innovaci√≥n (con porcentajes)
2. Nivel de apoyo familiar y social (con porcentajes)
3. Percepci√≥n del √©xito y el fracaso
4. Mentalidad emprendedora local

Proporciona datos cuantitativos cuando sea posible y ejemplos espec√≠ficos.`;

    return await callAI(prompt);
}

async function getMercadosTAMSAMSOM(companyInfo: any, relevantContext: string) {
    const prompt = `
Basado en el siguiente contexto y datos relevantes:
${relevantContext}

Genera tres secciones detalladas sobre los mercados TAM, SAM y SOM para ${companyInfo.nombreEmpresa} en ${companyInfo.industria}:

1. Mercado Total Direccionable (TAM)
   - Define el concepto
   - Calcula el TAM para emprendedores y startups
   - Explica la metodolog√≠a
   - Proporciona cifras espec√≠ficas

2. Mercado Disponible Servible (SAM)
   - Define el concepto
   - Calcula el SAM para emprendedores y startups
   - Explica los factores considerados
   - Proporciona cifras espec√≠ficas

3. Mercado Obtenible Servible (SOM)
   - Define el concepto
   - Calcula el SOM para emprendedores y startups
   - Explica los factores limitantes
   - Proporciona cifras espec√≠ficas

Incluye c√°lculos detallados y justificaci√≥n para cada mercado.`;

    return await callAI(prompt);
}

async function generateFinalReport(analysisData: any, companyInfo: any, steps: any[]) {
    const prompt = `
Con base en toda la siguiente informaci√≥n detallada:

Definiciones B√°sicas:
${analysisData.basicDefinitions}

Estructura de Mercado:
${analysisData.marketStructure}

Conteo de Startups:
${analysisData.startupCounts}

An√°lisis Poblacional:
${analysisData.populationAnalysis}

√Åreas de Crecimiento:
${analysisData.areasCrecimiento}

Infraestructura:
${analysisData.infraestructura}

Factores Culturales:
${analysisData.factoresCulturales}

An√°lisis TAM/SAM/SOM:
${analysisData.mercadosTAMSAMSOM}

Respuestas del usuario:
${steps.map((step: any) => `${step.title}: ${step.question}\nRespuesta: ${step.response}`).join("\n\n")}

Genera un informe ejecutivo completo con el siguiente formato exacto:

# üìä Sondeo geogr√°fico asistido por IA para mapear oportunidades de mercado
---------------------------------------------------------------------------------------------------
## üìã Resumen ejecutivo
[Sintetiza toda la informaci√≥n anterior en un resumen ejecutivo conciso pero completo]
---------------------------------------------------------------------------------------------------
## üó∫Ô∏è 1. Tama√±o del mercado por zonas
[Utiliza la informaci√≥n de marketStructure y startupCounts]
---------------------------------------------------------------------------------------------------
## üìà 2. √Åreas con potencial de crecimiento
[Basado en areasCrecimiento y an√°lisis poblacional]
---------------------------------------------------------------------------------------------------
## üèóÔ∏è 3. Consideraciones detalladas sobre infraestructura
[Utiliza la informaci√≥n detallada del an√°lisis de infraestructura]
---------------------------------------------------------------------------------------------------
## üë• 4. Factores Culturales
[Basado en el an√°lisis cultural detallado]
---------------------------------------------------------------------------------------------------
## üéØ 5. Mercado Total Direccionable (TAM)
[Utiliza los c√°lculos y definiciones del an√°lisis TAM]
---------------------------------------------------------------------------------------------------
## üèôÔ∏è 6. Mercado Disponible Servible (SAM)
[Utiliza los c√°lculos y definiciones del an√°lisis SAM]
---------------------------------------------------------------------------------------------------
## üéØ 7. Mercado Obtenible Servible (SOM)
[Utiliza los c√°lculos y definiciones del an√°lisis SOM]
---------------------------------------------------------------------------------------------------
## üí° Conclusi√≥n
[Sintetiza los hallazgos clave y proporciona recomendaciones espec√≠ficas]

Aseg√∫rate de:
1. Mantener el formato exacto con emojis y l√≠neas divisorias
2. Integrar toda la informaci√≥n analizada de manera coherente
3. Personalizar espec√≠ficamente para ${companyInfo.nombreEmpresa} en ${companyInfo.industria}
4. Incluir datos cuantitativos y cualitativos relevantes
5. Mantener consistencia en n√∫meros y estad√≠sticas`;

    return await callAI(prompt);
}

export async function POST(request: Request) {
    try {
        const body = await request.json();
        const { steps, companyInfo } = body;

        // Validar datos requeridos
        if (!companyInfo || !companyInfo.nombreEmpresa || !companyInfo.industria) {
            return new NextResponse(JSON.stringify({
                success: false,
                error: "Se requieren datos de la empresa (nombreEmpresa e industria)",
            }), {
                status: 400,
                headers: { 'Content-Type': 'application/json' }
            });
        }

        try {
            // Obtener contexto relevante
            const relevantContext = await getRelevantContext(companyInfo);

            // Obtener todos los an√°lisis
            const [
                basicDefinitions,
                marketStructure,
                startupCounts,
                populationAnalysis,
                areasCrecimiento,
                infraestructura,
                factoresCulturales,
                mercadosTAMSAMSOM,
            ] = await Promise.all([
                getBasicDefinitions(companyInfo, relevantContext),
                getMarketStructure(companyInfo, relevantContext),
                getStartupCounts(companyInfo, relevantContext),
                getPopulationAnalysis(companyInfo, relevantContext),
                getAreasCrecimiento(companyInfo, relevantContext),
                getInfraestructura(companyInfo, relevantContext),
                getFactoresCulturales(companyInfo, relevantContext),
                getMercadosTAMSAMSOM(companyInfo, relevantContext),
            ]);

            // Consolidar an√°lisis

          const analysisData = {
                          basicDefinitions,
                          marketStructure,
                          startupCounts,
                          populationAnalysis,
                          areasCrecimiento,
                          infraestructura,
                          factoresCulturales,
                          mercadosTAMSAMSOM
                      };

                      // Generar reporte final
                      const finalReport = await generateFinalReport(analysisData, companyInfo, steps);

                      // Asegurar formato correcto
                      const formattedReport = finalReport
                          .replace(/\n{3,}/g, '\n\n')
                          .replace(/^(#+ [^#\n]+)$/gm, '$1\n---------------------------------------------------------------------------------------------------')
                          .replace(/\n\s*\n---------------------------------------------------------------------------------------------------/g, '\n---------------------------------------------------------------------------------------------------');

                      // Estructura de la respuesta
                      const response = {
                          success: true,
                          analysis: formattedReport,
                          markdownReport: formattedReport,
                          metadata: {
                              empresa: companyInfo.nombreEmpresa,
                              industria: companyInfo.industria,
                              fechaGeneracion: new Date().toISOString(),
                              modeloUtilizado: MODEL_VERSION,
                              analisesRealizados: [
                                  'basicDefinitions',
                                  'marketStructure',
                                  'startupCounts',
                                  'populationAnalysis',
                                  'areasCrecimiento',
                                  'infraestructura',
                                  'factoresCulturales',
                                  'mercadosTAMSAMSOM'
                              ],
                              datosAnalizados: {
                                  tieneContextoRelevante: !!relevantContext,
                                  tieneRespuestasUsuario: steps.length > 0,
                                  numeroDeAnalisisRealizados: 8
                              }
                          },
                          rawData: {
                              basicDefinitions,
                              marketStructure,
                              startupCounts,
                              populationAnalysis,
                              areasCrecimiento,
                              infraestructura,
                              factoresCulturales,
                              mercadosTAMSAMSOM
                          }
                      };

                      return new NextResponse(JSON.stringify(response), {
                          status: 200,
                          headers: {
                              'Content-Type': 'application/json',
                              'Cache-Control': 'no-store, must-revalidate',
                              'Pragma': 'no-cache'
                          }
                      });

                  } catch (analysisError) {
                      console.error("Error en el an√°lisis:", analysisError);
                      return new NextResponse(JSON.stringify({
                          success: false,
                          error: "Error al generar el an√°lisis",
                          details: analysisError.message,
                          errorType: analysisError.name,
                          timestamp: new Date().toISOString()
                      }), {
                          status: 500,
                          headers: {
                              'Content-Type': 'application/json'
                          }
                      });
                  }

              } catch (parseError) {
                  console.error("Error al procesar la solicitud:", parseError);
                  return new NextResponse(JSON.stringify({
                      success: false,
                      error: "Error al procesar la solicitud",
                      details: parseError.message,
                      errorType: parseError.name,
                      timestamp: new Date().toISOString()
                  }), {
                      status: 400,
                      headers: {
                          'Content-Type': 'application/json'
                      }
                  });
              }
          }